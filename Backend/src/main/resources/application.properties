spring.application.name=Backend

# Base de datos - usar variables de entorno para seguridad
spring.datasource.url=${DB_URL:jdbc:mysql://database-1.chaw6oq8ujma.us-east-2.rds.amazonaws.com:3306/base_api?allowPublicKeyRetrieval=true&useSSL=true&requireSSL=true&serverTimezone=UTC&createDatabaseIfNotExist=true&connectTimeout=60000&socketTimeout=60000&autoReconnect=true&failOverReadOnly=false&maxReconnects=10}
spring.datasource.username=${DB_USERNAME:admin}
spring.datasource.password=${DB_PASSWORD:totocapo}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000

# JWT Configuration
jwt.secret=${JWT_SECRET:paymentModuleSecretKey12345678901234567890123456789012345}
jwt.expiration=86400000
jwt.issuer=payment-module

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.show-extensions=true
springdoc.swagger-ui.show-common-extensions=true

# Security
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true

# Server configuration
server.address=0.0.0.0
server.port=8080

# Actuator - Configuración mínima para métricas locales
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

# Micrometer Prometheus configuration
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=60s
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=local

# Actuator info
info.app.name=Backend Payment API
info.app.description=API de pagos y facturación
info.app.version=@project.version@
info.app.java.version=@java.version@

# Bean override configuration
spring.main.allow-bean-definition-overriding=true

# Logging
logging.level.backend_api.Backend.Auth=INFO
logging.level.org.springframework.security=WARN
logging.level.backend_api.Backend.messaging=DEBUG

# RabbitMQ Configuration
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:admin}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:admin}
spring.rabbitmq.virtual-host=${RABBITMQ_VHOST:/}

# RabbitMQ Connection Settings
spring.rabbitmq.connection-timeout=30000
spring.rabbitmq.requested-heartbeat=30
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.initial-interval=2000
