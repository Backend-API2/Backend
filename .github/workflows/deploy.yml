name: Build and Deploy Backend

on:
  push:
    branches:
      - master

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build backend with Maven
        run: |
          cd Backend
          mvn clean package -DskipTests

          # Verificar que el JAR se generó correctamente
          echo "Verificando que el JAR se generó:"
          ls -la target/
          if [ -f target/Backend-0.0.1-SNAPSHOT.jar ]; then
            echo "✓ JAR generado correctamente"
            ls -la target/Backend-0.0.1-SNAPSHOT.jar
          else
            echo "✗ ERROR: JAR no se generó"
            echo "Contenido del directorio target:"
            ls -la target/
            exit 1
          fi

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.6
        with:
          host: 18.191.118.13
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'Backend/target/Backend-0.0.1-SNAPSHOT.jar'
          target: '/home/ec2-user/'
          strip_components: 2
          timeout: 60s
          command_timeout: 60s

      - name: Verify JAR was copied
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: 18.191.118.13
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Verificando que el JAR fue copiado correctamente:"
            echo "Contenido del directorio /home/ec2-user/:"
            ls -la /home/ec2-user/
            echo ""
            echo "Buscando archivos JAR:"
            find /home/ec2-user -name "*.jar" -type f
            echo ""

            # Verificar en la ubicación esperada (con strip_components: 2)
            if [ -f /home/ec2-user/Backend-0.0.1-SNAPSHOT.jar ]; then
              echo "✓ JAR file found successfully at expected location"
              ls -la /home/ec2-user/Backend-0.0.1-SNAPSHOT.jar
            # Verificar en la ubicación alternativa (sin strip_components)
            elif [ -f /home/ec2-user/Backend/target/Backend-0.0.1-SNAPSHOT.jar ]; then
              echo "✓ JAR file found at alternative location, moving to expected location"
              mv /home/ec2-user/Backend/target/Backend-0.0.1-SNAPSHOT.jar /home/ec2-user/Backend-0.0.1-SNAPSHOT.jar
              ls -la /home/ec2-user/Backend-0.0.1-SNAPSHOT.jar
            else
              echo "✗ JAR file not found in any expected location"
              echo "ERROR: El archivo Backend-0.0.1-SNAPSHOT.jar no existe en el servidor"
              echo "Esto indica que el paso de copia (SCP) falló"
              exit 1
            fi

      - name: Alternative copy with rsync (if SCP failed)
        if: failure()
        run: |
          echo "SCP falló, intentando con rsync como alternativa..."
          # Instalar rsync si no está disponible
          sudo apt-get update && sudo apt-get install -y rsync

          # Crear la clave SSH temporal
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/ec2_key
          chmod 600 /tmp/ec2_key

          # Copiar con rsync (usando --remove-source-files para simular strip_components)
          rsync -avz --remove-source-files -e "ssh -i /tmp/ec2_key -o StrictHostKeyChecking=no" \
            Backend/target/Backend-0.0.1-SNAPSHOT.jar \
            ec2-user@18.191.118.13:/home/ec2-user/

          echo "Verificando que rsync funcionó:"
          ssh -i /tmp/ec2_key -o StrictHostKeyChecking=no ec2-user@18.191.118.13 \
            "ls -la /home/ec2-user/Backend-0.0.1-SNAPSHOT.jar"

          # Limpiar la clave temporal
          rm -f /tmp/ec2_key

      - name: Restart backend on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: 18.191.118.13
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user

            # Crear directorio deploy si no existe
            mkdir -p deploy

            # Parar procesos existentes
            pm2 stop backend || true
            pm2 delete backend || true

            # Mostrar contenido del directorio para debug
            echo "Contenido del directorio /home/ec2-user:"
            ls -la /home/ec2-user/

            # Verificar que el archivo JAR existe
            if [ ! -f Backend-0.0.1-SNAPSHOT.jar ]; then
              echo "ERROR: Backend-0.0.1-SNAPSHOT.jar no encontrado en /home/ec2-user/"
              echo "Buscando archivos JAR en el directorio:"
              find /home/ec2-user -name "*.jar" -type f
              exit 1
            fi

            # Mover el jar a la ubicación final
            mv Backend-0.0.1-SNAPSHOT.jar backend.jar

            # Verificar que backend.jar exista
            if [ ! -f backend.jar ]; then
              echo "ERROR: backend.jar no encontrado después del move"
              exit 1
            fi

            # Iniciar con puerto 9090
            pm2 start backend.jar --name backend -- -Dserver.port=9090

            # Verificar que el proceso se inició correctamente
            sleep 5
            pm2 status
