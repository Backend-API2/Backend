name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build and test (PR)
        if: github.event_name == 'pull_request'
        working-directory: ./Backend
        run: mvn -B -q test

      - name: Package (push to master)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        working-directory: ./Backend
        run: mvn -B -q -DskipTests package

      - name: Prepare remote directory
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            mkdir -p "$HOME/app"

      - name: Upload JAR
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: 'Backend/target/Backend-*.jar'
          target: '$HOME/app'

      - name: Upload scripts
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: 'Backend/scripts'
          target: '$HOME/app'

      - name: Restart application
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            chmod +x "$HOME/app/scripts"/*.sh || true
            "$HOME/app/scripts/restart.sh"
