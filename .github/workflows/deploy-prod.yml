name: Deploy to Production

on:
  push:
    branches: [prod]

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build JAR
        working-directory: ./Backend
        run: mvn -B -DskipTests clean package

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to Production
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
            cd /home/ec2-user/app

            echo 'ðŸ§¹ Cleaning up old containers and images...'
            docker-compose -p app-prod -f docker-compose.prod.yml down --remove-orphans || true
            docker rm -f $(docker ps -a -q --filter ancestor=app-prod-backend-prod) 2>/dev/null || true
            docker rmi -f app-prod-backend-prod 2>/dev/null || true
            docker container prune -f || true
            echo 'âœ… Cleanup done!'

            # Crear directorios necesarios
            mkdir -p /home/appuser/app

          "

          # Copiar JAR y docker-compose
          scp -o StrictHostKeyChecking=no -P ${{ secrets.EC2_PORT }} ./Backend/target/*.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ec2-user/app/app.jar
          scp -o StrictHostKeyChecking=no -P ${{ secrets.EC2_PORT }} docker-compose.prod.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ec2-user/app/

          # Construir y levantar producciÃ³n
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "
            cd /home/ec2-user/app
            docker-compose -p app-prod -f docker-compose.prod.yml build --no-cache backend-prod
            docker-compose -p app-prod -f docker-compose.prod.yml up -d
            echo 'ðŸš€ Production deployed!'
            echo 'Backend: http://localhost:8081'
            echo 'Grafana: http://localhost:3001'
          "
