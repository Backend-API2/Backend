name: CI Validation

on:
  push:
    branches: [main, develop, new-workflow]
  pull_request:
    branches: [main]

jobs:
  validate-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Validate Maven project
        run: mvn validate
        working-directory: ./Backend

      - name: Compile code
        run: mvn compile
        working-directory: ./Backend

      - name: Run tests
        run: mvn test
        working-directory: ./Backend

      - name: Package application
        run: mvn package -DskipTests
        working-directory: ./Backend

      - name: Verify JAR creation
        run: |
          if [ -f "Backend/target/Backend-0.0.1-SNAPSHOT.jar" ]; then
            echo "‚úÖ JAR file created successfully"
            echo "JAR size: $(ls -lh Backend/target/Backend-0.0.1-SNAPSHOT.jar | awk '{print $5}')"
          else
            echo "‚ùå JAR file not found"
            exit 1
          fi

      - name: Test JAR execution
        run: |
          echo "üß™ Testing JAR execution..."
          timeout 30s java -jar Backend/target/Backend-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod &
          sleep 10
          if curl -f http://localhost:8080/api/health/check; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ùå Health check failed"
            exit 1
          fi
          pkill -f "Backend-0.0.1-SNAPSHOT.jar" || true

      - name: Code quality check
        run: |
          echo "üîç Running code quality checks..."
          mvn spotbugs:check -f Backend/pom.xml || echo "‚ö†Ô∏è SpotBugs found issues (non-blocking)"
          mvn checkstyle:check -f Backend/pom.xml || echo "‚ö†Ô∏è Checkstyle found issues (non-blocking)"

  security-validation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run OWASP dependency check
        run: |
          echo "üîí Running security scan..."
          mvn org.owasp:dependency-check-maven:check -f Backend/pom.xml || echo "‚ö†Ô∏è Security vulnerabilities found (non-blocking)"

  integration-test:
    runs-on: ubuntu-latest
    needs: validate-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Start application
        run: |
          mvn package -DskipTests -f Backend/pom.xml
          nohup java -jar Backend/target/Backend-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod > app.log 2>&1 &
          sleep 15

      - name: Run integration tests
        run: |
          echo "üß™ Running integration tests..."

          # Test health endpoint
          if curl -f http://localhost:8080/api/health/check; then
            echo "‚úÖ Health endpoint working"
          else
            echo "‚ùå Health endpoint failed"
            exit 1
          fi

          # Test login endpoint
          LOGIN_RESPONSE=$(curl -s -X POST http://localhost:8080/api/auth/login \
            -H "Content-Type: application/json" \
            -d '{"email":"test@example.com","password":"password123"}')

          if echo "$LOGIN_RESPONSE" | grep -q "token"; then
            echo "‚úÖ Login endpoint working"
          else
            echo "‚ùå Login endpoint failed"
            exit 1
          fi

          echo "‚úÖ All integration tests passed!"

      - name: Cleanup
        if: always()
        run: |
          pkill -f "Backend-0.0.1-SNAPSHOT.jar" || true
