# Alertmanager configuration para Backend Spring Boot
global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@yourcompany.com'

# Configuración de rutas de alertas
route:
  group_by: ['alertname', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'console'
  routes:
    - match:
        severity: critical
      receiver: 'critical-alerts'
    - match:
        severity: warning
      receiver: 'warning-alerts'

# Configuración de receptores
receivers:
  # Receptor para mostrar alertas en consola (desarrollo/testing)
  - name: 'console'
    webhook_configs:
      - url: 'http://localhost:5001/'
        send_resolved: true

  # Receptor para alertas críticas (ejemplo: Slack)
  - name: 'critical-alerts'
    webhook_configs:
      - url: 'http://localhost:5001/'
        send_resolved: true
    # Descomenta para enviar a Slack en producción:
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    #     channel: '#alerts'
    #     title: 'Critical Alert: {{ .GroupLabels.alertname }}'
    #     text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'

  # Receptor para alertas de warning (ejemplo: Email)
  - name: 'warning-alerts'
    webhook_configs:
      - url: 'http://localhost:5001/'
        send_resolved: true
    # Descomenta para enviar por email en producción:
    # email_configs:
    #   - to: 'admin@yourcompany.com'
    #     subject: 'Warning Alert: {{ .GroupLabels.alertname }}'
    #     body: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'

# Configuración de inhibición (evita alertas duplicadas)
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'service']
